<Window x:Class="GeneticAlgorithmSimulator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GeneticAlgorithmSimulator"
        xmlns:models="clr-namespace:GeneticAlgorithmSimulator.Models"
        xmlns:validation="clr-namespace:GeneticAlgorithmSimulator.Validation"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:oxy="http://oxyplot.org/wpf" mc:Ignorable="d" Width="1200"
        Height="825" MinWidth="1200" MinHeight="400"
        Title="Genetic algorithm simulator" Loaded="Window_Loaded">
    <Window.Resources>
        <models:GeneticAlgorithmSettings x:Key="GeneticAlgorithmSettings" />
        <ObjectDataProvider x:Key="TestFunctionEnum" MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:TestFunctionEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="OptimizationTypeEnum" MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:OptimizationTypeEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="SelectionMethodEnum" MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:SelectionMethodEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="CrossingMethodEnum" MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:CrossingOperatorEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="MutationMethodEnum" MethodName="GetValues"
                ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:MutationOperatorEnum" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition MaxHeight="70" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" MaxWidth="300" MinWidth="200" />
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>

        <!--Settings form-->
        <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="8" x:Name="StackPanelSettings">
                <StackPanel.DataContext>
                    <Binding Source="{StaticResource GeneticAlgorithmSettings}" />
                </StackPanel.DataContext>
                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Test function
                    </TextBlock>
                </Label>
                <ComboBox VerticalAlignment="Top" x:Name="ComboBoxTestFunction"
                        ItemsSource="{Binding Source={StaticResource TestFunctionEnum}}"
                        SelectedItem="{Binding Path=TestFunction, Mode=TwoWay}" />

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Function optimization type
                    </TextBlock>
                </Label>
                <ComboBox VerticalAlignment="Top" x:Name="ComboBoxFunctionOptimizationType"
                        ItemsSource="{Binding Source={StaticResource OptimizationTypeEnum}}"
                        SelectedItem="{Binding Path=OptimizationType, Mode=TwoWay}" />

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Number of bits in chromosome
                    </TextBlock>
                </Label>
                <TextBox VerticalAlignment="Top" x:Name="TextBoxNumOfBits"
                        PreviewTextInput="OnlyPositiveIntegerInput">
                    <TextBox.Text>
                        <Binding Path="NumOfBits"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="0" Max="64" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Population size
                    </TextBlock>
                </Label>
                <TextBox VerticalAlignment="Top" x:Name="TextBoxPopulationSize"
                        PreviewTextInput="OnlyPositiveIntegerInput">
                    <TextBox.Text>
                        <Binding Path="PopulationSize"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="20" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Epochs amount
                    </TextBlock>
                </Label>
                <TextBox VerticalAlignment="Top" x:Name="TextBoxEpochsAmount"
                        PreviewTextInput="OnlyPositiveIntegerInput">
                    <TextBox.Text>
                        <Binding Path="EpochsAmount"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Percentage of individuals to keep in Elite Strategy
                    </TextBlock>
                </Label>
                <TextBox VerticalAlignment="Top"
                        x:Name="TextBoxPercentageInElite"
                        PreviewTextInput="OnlyPositiveIntegerInput">
                    <TextBox.Text>
                        <Binding Path="PercentageInElite"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="0" Max="100" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Inversion probability (as percentage)
                    </TextBlock>
                </Label>
                <TextBox VerticalAlignment="Top" x:Name="TextBoxInversionProbab"
                        PreviewTextInput="OnlyPositiveIntegerInput">
                    <TextBox.Text>
                        <Binding Path="InversionProbabPerc"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="0" Max="100" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>


                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Selection method
                    </TextBlock>
                </Label>
                <ComboBox VerticalAlignment="Top"
                        x:Name="ComboBoxSelectionMethod"
                        ItemsSource="{Binding Source={StaticResource SelectionMethodEnum}}"
                        SelectedItem="{Binding Path=SelectionMethod, Mode=TwoWay}"
                        SelectionChanged="ComboBoxSelectionMethod_SelectionChanged" />

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow"
                            Text="Percentage of individuals to select in best and roulette selection methods" />
                </Label>
                <TextBox VerticalAlignment="Top"
                        x:Name="TextBoxPercentageToSelect"
                        PreviewTextInput="OnlyPositiveIntegerInput"
                        IsEnabled="False">
                    <TextBox.Text>
                        <Binding Path="PercentageToSelect"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="0" Max="100" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Amount of individuals in group in tournament selection method
                    </TextBlock>
                </Label>
                <TextBox VerticalAlignment="Top"
                        x:Name="TextBoxNumOfIndivInGroup"
                        PreviewTextInput="OnlyPositiveIntegerInput"
                        IsEnabled="False">
                    <TextBox.Text>
                        <Binding Path="NumOfIndividualsInGroup"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="0" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Crossing method
                    </TextBlock>
                </Label>
                <ComboBox VerticalAlignment="Top"
                        x:Name="ComboBoxCrossingMethod"
                        ItemsSource="{Binding Source={StaticResource CrossingMethodEnum}}"
                        SelectedItem="{Binding Path=CrossingMethod, Mode=TwoWay}" />

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Crossing probability (as percentage)
                    </TextBlock>
                </Label>
                <TextBox VerticalAlignment="Top" x:Name="TextBoxCrossingProbab"
                        PreviewTextInput="OnlyPositiveIntegerInput">
                    <TextBox.Text>
                        <Binding Path="CrossingProbabPerc"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="0" Max="100" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Mutation method
                    </TextBlock>
                </Label>
                <ComboBox VerticalAlignment="Top"
                        x:Name="ComboBoxMutationMethod"
                        ItemsSource="{Binding Source={StaticResource MutationMethodEnum}}"
                        SelectedItem="{Binding Path=MutationMethod, Mode=TwoWay}" />

                <Label>
                    <TextBlock TextWrapping="WrapWithOverflow">
                        Mutation probability (as percentage)
                    </TextBlock>
                </Label>
                <TextBox VerticalAlignment="Top" x:Name="TextBoxMutationProbab"
                        PreviewTextInput="OnlyPositiveIntegerInput">
                    <TextBox.Text>
                        <Binding Path="MutationProbabPerc"
                                UpdateSourceTrigger="PropertyChanged"
                                Mode="TwoWay">
                            <Binding.ValidationRules>
                                <validation:NumberRangeRule Min="0" Max="100" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

            </StackPanel>
        </ScrollViewer>

        <!--Start-->
        <StackPanel Grid.Column="0" Grid.Row="1" Margin="6"
                VerticalAlignment="Center">
            <Button Padding="16, 2" Margin="0, 0, 0, 6" Content="Start"
                    x:Name="ButtonStart" Click="ButtonStart_Click"></Button>
        </StackPanel>

        <!--Plots-->
        <ScrollViewer Grid.Column="1" Grid.RowSpan="2"
                VerticalScrollBarVisibility="Auto">
            <Grid MinHeight="650">
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="30" />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Row="0" Grid.ColumnSpan="2">
                    <TextBlock VerticalAlignment="Center" TextAlignment="Center"
                            Margin="6, 0"
                            Text="{Binding Path=ComputationTimeMsg, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock VerticalAlignment="Center" TextAlignment="Center"
                            Margin="6, 0"
                            Text="{Binding Path=ResultMsg, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <oxy:Plot x:Name="PlotResults" Grid.Column="0" Grid.Row="1"
                        IsLegendVisible="False"
                        Title="Function value for best individual in given epoch">
                    <oxy:Plot.Annotations>
                        <oxy:LineAnnotation Type="Horizontal"
                                Y="{Binding Path=TestFunctionActualMinVal, Mode=OneWay}" Color="Red" StrokeThickness="1" Text="Function minimum value" TextColor="DimGray"/>
                    </oxy:Plot.Annotations>
                    <oxy:Plot.Series>
                        <oxy:LineSeries x:Name="PlotResultsLine"
                                Title="Result in given epoch" />
                    </oxy:Plot.Series>
                    <oxy:Plot.Axes>
                        <oxy:LinearAxis Title="Epoch" Position="Bottom"
                                Minimum="0" AbsoluteMinimum="0" />
                    </oxy:Plot.Axes>
                </oxy:Plot>

                <oxy:Plot Grid.Column="1" Grid.Row="1" IsLegendVisible="True"
                        Title="Function arguments for best individual in all epochs"
                        Subtitle="Function arguments (x_{1}, x_{2}) depicted as points on plane"
                        x:Name="PlotArguments" LegendOrientation="Horizontal" LegendPlacement="Outside" LegendPosition="TopCenter">
                    <oxy:Plot.Series>
                        <oxy:ScatterSeries
                                x:Name="PlotArgumentsScatterIndividuals"
                                Title="Individuals" Color="Red" MarkerType="Circle"/>
                        <oxy:ScatterSeries x:Name="PlotArgumentsScatterMin"
                                Title="Actual minimum at" Color="Green"
                                MarkerType="Circle" />
                    </oxy:Plot.Series>
                    <oxy:Plot.Axes>
                        <oxy:LinearAxis Title="x_{1}" Position="Bottom" />
                        <oxy:LinearAxis Title="x_{2}" Position="Left" />
                    </oxy:Plot.Axes>
                </oxy:Plot>

                <oxy:Plot x:Name="PlotMean" Grid.Column="0" Grid.Row="2"
                        Title="Mean function value"
                        Subtitle="Mean function value of population in given epoch">
                    <oxy:Plot.Series>
                        <oxy:LineSeries x:Name="PlotMeanLine" />
                    </oxy:Plot.Series>
                    <oxy:Plot.Axes>
                        <oxy:LinearAxis Title="Epoch" Position="Bottom"
                                Minimum="0" AbsoluteMinimum="0" />
                    </oxy:Plot.Axes>
                </oxy:Plot>

                <oxy:Plot x:Name="PlotStdDev" Grid.Column="1" Grid.Row="2"
                        Title="Standard deviation of function value"
                        Subtitle="Standard deviation of function value of population in given epoch">
                    <oxy:Plot.Series>
                        <oxy:LineSeries x:Name="PlotStdDevLine" />
                    </oxy:Plot.Series>
                    <oxy:Plot.Axes>
                        <oxy:LinearAxis Title="Epoch" Position="Bottom"
                                Minimum="0" AbsoluteMinimum="0" />
                    </oxy:Plot.Axes>
                </oxy:Plot>
            </Grid>
        </ScrollViewer>

        <Grid x:Name="GridLoader" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
                Background="White" Opacity="0.85" Visibility="Hidden">
            <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center"
                    TextAlignment="Center" FontSize="20" FontWeight="SemiBold"
                    Text="Working..." />
        </Grid>
    </Grid>
</Window>
